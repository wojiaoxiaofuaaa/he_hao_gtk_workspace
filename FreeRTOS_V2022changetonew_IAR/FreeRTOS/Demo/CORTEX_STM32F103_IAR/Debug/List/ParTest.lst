###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.1.169/W32 for ARM         02/May/2024  10:32:05
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        E:\code\free_rtos_revision\FreeRTOS_V2022changetonew_IAR\FreeRTOS\Demo\CORTEX_STM32F103_IAR\ParTest\ParTest.c
#    Command line =  
#        -f C:\Users\4444\AppData\Local\Temp\EW453A.tmp
#        (E:\code\free_rtos_revision\FreeRTOS_V2022changetonew_IAR\FreeRTOS\Demo\CORTEX_STM32F103_IAR\ParTest\ParTest.c
#        -D VECT_TAB_FLASH -D IAR_ARM_CM3 -lcN
#        E:\code\free_rtos_revision\FreeRTOS_V2022changetonew_IAR\FreeRTOS\Demo\CORTEX_STM32F103_IAR\Debug\List
#        --diag_suppress Pa082,pe191 -o
#        E:\code\free_rtos_revision\FreeRTOS_V2022changetonew_IAR\FreeRTOS\Demo\CORTEX_STM32F103_IAR\Debug\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        D:\tool\digital_tool_keil_common_use\keil\IAR\arm\inc\c\DLib_Config_Full.h
#        -I
#        E:\code\free_rtos_revision\FreeRTOS_V2022changetonew_IAR\FreeRTOS\Demo\CORTEX_STM32F103_IAR\.\
#        -I
#        E:\code\free_rtos_revision\FreeRTOS_V2022changetonew_IAR\FreeRTOS\Demo\CORTEX_STM32F103_IAR\STM32F10xFWLib\inc\
#        -I
#        E:\code\free_rtos_revision\FreeRTOS_V2022changetonew_IAR\FreeRTOS\Demo\CORTEX_STM32F103_IAR\..\..\Source\include\
#        -I
#        E:\code\free_rtos_revision\FreeRTOS_V2022changetonew_IAR\FreeRTOS\Demo\CORTEX_STM32F103_IAR\..\common\include\
#        -Ol --use_c++_inline --require_prototypes)
#    Locale       =  C
#    List file    =  
#        E:\code\free_rtos_revision\FreeRTOS_V2022changetonew_IAR\FreeRTOS\Demo\CORTEX_STM32F103_IAR\Debug\List\ParTest.lst
#    Object file  =  
#        E:\code\free_rtos_revision\FreeRTOS_V2022changetonew_IAR\FreeRTOS\Demo\CORTEX_STM32F103_IAR\Debug\Obj\ParTest.o
#
###############################################################################

E:\code\free_rtos_revision\FreeRTOS_V2022changetonew_IAR\FreeRTOS\Demo\CORTEX_STM32F103_IAR\ParTest\ParTest.c
      1          /*
      2           * FreeRTOS V202212.01
      3           * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
      4           *
      5           * Permission is hereby granted, free of charge, to any person obtaining a copy of
      6           * this software and associated documentation files (the "Software"), to deal in
      7           * the Software without restriction, including without limitation the rights to
      8           * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
      9           * the Software, and to permit persons to whom the Software is furnished to do so,
     10           * subject to the following conditions:
     11           *
     12           * The above copyright notice and this permission notice shall be included in all
     13           * copies or substantial portions of the Software.
     14           *
     15           * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     16           * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
     17           * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
     18           * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
     19           * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
     20           * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
     21           *
     22           * https://www.FreeRTOS.org
     23           * https://github.com/FreeRTOS
     24           *
     25           */
     26          
     27          /*-----------------------------------------------------------
     28           * Simple parallel port IO routines.
     29           *-----------------------------------------------------------*/
     30          
     31          /* FreeRTOS.org includes. */
     32          #include "FreeRTOS.h"
     33          #include "task.h"
     34          #include "partest.h"
     35          
     36          /* Library includes. */
     37          #include "stm32f10x_lib.h"
     38          
     39          #define partstMAX_OUTPUT_LED	( 4 )
     40          #define partstFIRST_LED			GPIO_Pin_6
     41          
     42          static unsigned short usOutputValue = 0;
     43          
     44          /*-----------------------------------------------------------*/
     45          
     46          void vParTestInitialise( void )
     47          {
     48          GPIO_InitTypeDef GPIO_InitStructure;
     49          
     50          	/* Configure PC.06, PC.07, PC.08 and PC.09 as output push-pull */
     51          	GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_6 | GPIO_Pin_7 | GPIO_Pin_8 | GPIO_Pin_9;
     52          	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
     53          	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
     54          	GPIO_Init( GPIOC, &GPIO_InitStructure );
     55          }
     56          /*-----------------------------------------------------------*/
     57          
     58          void vParTestSetLED( unsigned portBASE_TYPE uxLED, signed portBASE_TYPE xValue )
     59          {
     60          unsigned short usBit;
     61          
     62          	vTaskSuspendAll();
     63          	{
     64          		if( uxLED < partstMAX_OUTPUT_LED )
     65          		{
     66          			usBit = partstFIRST_LED << uxLED;
     67          
     68          			if( xValue == pdFALSE )
     69          			{
     70          				usBit ^= ( unsigned short ) 0xffff;
     71          				usOutputValue &= usBit;
     72          			}
     73          			else
     74          			{
     75          				usOutputValue |= usBit;
     76          			}
     77          
     78          			GPIO_Write( GPIOC, usOutputValue );
     79          		}
     80          	}
     81          	xTaskResumeAll();
     82          }
     83          /*-----------------------------------------------------------*/
     84          
     85          void vParTestToggleLED( unsigned portBASE_TYPE uxLED )
     86          {
     87          unsigned short usBit;
     88          
     89          	vTaskSuspendAll();
     90          	{
     91          		if( uxLED < partstMAX_OUTPUT_LED )
     92          		{
     93          			usBit = partstFIRST_LED << uxLED;
     94          
     95          			if( usOutputValue & usBit )
     96          			{
     97          				usOutputValue &= ~usBit;
     98          			}
     99          			else
    100          			{
    101          				usOutputValue |= usBit;
    102          			}
    103          
    104          			GPIO_Write( GPIOC, usOutputValue );
    105          		}
    106          	}
    107          	xTaskResumeAll();
    108          }
    109          /*-----------------------------------------------------------*/
    110          

Errors: 9
Warnings: none
